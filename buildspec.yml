version: 0.2

env:
  variables:
    AWS_ACCESS_KEY_ID: "arn:aws:secretsmanager:ap-south-1:533267334695:secret:anonymous-aws-credentials-NDJohM:access-key"
    AWS_SECRET_ACCESS_KEY: "arn:aws:secretsmanager:ap-south-1:533267334695:secret:anonymous-aws-credentials-NDJohM:secret-key"

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - aws --version
      - echo "Installing app dependencies..."
      - curl -LO https://dl.k8s.io/release/v1.27.2/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
      - echo "Check kubectl version"
      - kubectl version --short --client
      - echo "Downloading the Hadolint tool..."
      - wget -O hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
      - sudo cp hadolint /usr/local/bin/hadolint
      - sudo chmod +x /usr/local/bin/hadolint
      - hadolint --version
      - wget https://github.com/stackrox/kube-linter/releases/download/0.2.5/kube-linter-linux.tar.gz
      - tar -xvf kube-linter-linux.tar.gz
      - mv kube-linter /usr/local/bin/
      - yum update -y
      - sudo yum install java-17-amazon-corretto-headless -y
      - VERSION=$(curl -s https://jeremylong.github.io/DependencyCheck/current.txt)
      - curl -Ls "https://github.com/jeremylong/DependencyCheck/releases/download/v$VERSION/dependency-check-$VERSION-release.zip" --output dependency-check.zip
      - yum install unzip -y
      - unzip dependency-check.zip

  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - export REPOSITORY_URI=533267334695.dkr.ecr.ap-south-1.amazonaws.com/2-tier-app
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - export IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - export EKS_CLUSTER_NAME="demo"
      - export REGION="ap-south-1"
      - export DEPLOYMENT_PATH="argocd-eks-manifests/two-tier-app-deployment.yml"

  build:
    commands:
      - echo "Build started on $(date)"
      - echo "Validating the Dockerfile using Hadolint tool..."
      - hadolint --config hadolint.yml Dockerfile 2>&1 | tee output.log
      - echo "Validating the source code using OWASP Dependency Check..."
      - ./dependency-check/bin/dependency-check.sh --out . --scan .
      - echo "Building the Docker image..."
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo "Build completed on $(date)"
      - echo "Pushing the Docker images..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - export NEW_IMAGE_NAME="$REPOSITORY_URI:$IMAGE_TAG"
      - echo $NEW_IMAGE_NAME
      - sed -i "s|image:.*|image:$NEW_IMAGE_NAME|" $DEPLOYMENT_PATH
      - cat $DEPLOYMENT_PATH
      - echo "Update Kube Config"      
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $REGION
      - kube-linter checks list
      - kube-linter lint argocd-eks-manifests/ 2>&1 | tee kube-linter.log
      - kubectl apply -f argocd-eks-manifests/namespace.yml
      - sleep 5
      - kubectl apply -f argocd-eks-manifests/

artifacts:
  files:
    - dependency-check-report.html
